{"version":3,"sources":["logo.svg","components/Review/Restaurantdetail.js","components/Call.js","components/LeaveReview.js","components/Review/Review.js","components/ReviewCell.js","components/ReviewCall.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Restaurant","props","className","src","imgclicked","image_url","name","phone","location","Call","img_onclick","id","data","state","setState","img_clicked","display_address","this","callApi","axios","get","headers","Authorization","process","params","term","latitude","longitude","then","res","console","log","businesses","catch","err","Component","isFillingOutForm","handleClick","bind","submitForm","prevState","event","preventDefault","createComment","onSubmit","type","onChange","takeName","placeholder","takeRating","takeComment","value","onClick","Review","componentDidUpdate","prevProps","reviewData","reviewRender","componentDidMount","length","handletextChange","e","target","temp","text","handleSubmit","delete","del","edit","reviewButton","map","dt","i","user","time_created","rating","autoFocus","disabled","hidden","comment","reviews","currentReviews","newReview","parseInt","Date","toISOString","replace","unshift","restuarant","Search","Click","renderReview","search","substr","submitHandler","htmlFor","updateSearch","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a7433059.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Review.scss'\n\nfunction Restaurant(props) {\n    //Rendering Restaurant details in Review page\n    return (\n      <div className=\"Restaurant\">\n       <img src={props.imgclicked.image_url}/><br /><br />\n       <span>{props.imgclicked.name}</span><br />\n       <span>{props.imgclicked.phone}</span><br />\n       <span>{props.location[0]}</span><br />\n       <span>{props.location[1]}</span><br />\n      </div>\n    );\n  }\n  \n  export default Restaurant;\n  ","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Restaurant from './Review/Restaurantdetail';\n\nexport default class Call extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: [{}],\n          img_clicked:{},\n          location:''\n        }\n  }\n\n    componentDidMount() {\n        {/* call the api on page load */}\n        this.callApi();\n    }\n    async callApi() {\n        {/*https://medium.com/@chaoyue_zhao/how-to-make-axios-api-calls-with-yelp-fusion-inside-react-js-10755d8485c5*/}\n        \n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n        headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n        },\n        params: {\n            term: this.props.term,\n            latitude: '40.730610',\n            longitude: '-73.935242',\n        }\n        })\n        .then((res) => {\n        console.log(res.data.businesses);\n        \n        this.setState({data:res.data.businesses})\n        this.img_onclick(1)\n        console.log (this.state.data[0].location.display_address);\n        })\n        .catch((err) => {\n        console.log ('error');\n        })\n        \n      }\n      img_onclick=(id)=>{\n        var data=this.state.data[id]\n        this.setState({img_clicked:data})\n        this.setState({location:this.state.data[0].location.display_address})\n      }\n  \n  render() {\n    return (\n      <div>\n       \n       <Restaurant imgclicked={this.state.img_clicked} location={this.state.location} />\n        \n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport '../styles/LeaveReview.css'\nexport default class Call extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isFillingOutForm: false\n        }\n        {/*binds the function to the class*/}\n        this.handleClick = this.handleClick.bind(this);\n        //put this:event.preventDefault(); in the new form submitting function\n        this.submitForm = this.submitForm.bind(this);\n  }\n\n  handleClick() {\n    {/*acts a trigger between form and button*/}\n    this.setState(prevState => ({\n        isFillingOutForm: !prevState.isFillingOutForm\n    }));\n  }\n\n  submitForm(event){\n    event.preventDefault();\n    {/*submit form and creates comment*/}\n    this.props.createComment(); \n    this.setState(prevState => ({\n        isFillingOutForm: !prevState.isFillingOutForm\n    }));\n  }\n  \n  render() {\n    return (\n        this.state.isFillingOutForm ?\n        <div className=\"row\">\n            <form onSubmit={this.submitForm}>\n                <label>\n                    Name:\n                    <input type=\"text\" onChange={this.props.takeName} placeholder=\"Name\"/>\n                    <br />\n                </label>\n                <label>\n                    Rating:\n                    <input type=\"number\" onChange={this.props.takeRating} placeholder=\"0.0\"/>\n                    <br />\n                </label>\n                <label>\n                    Comment:\n                    <input type=\"text\" onChange={this.props.takeComment} placeholder=\"Comment\"/>\n                    <br />\n                </label>\n                <label>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </label>\n            </form>\n        </div>\n      :\n        <div className=\"row\">\n            <button onClick={this.handleClick}>Leave a review</button>\n        </div>\n      \n    )\n  }\n}","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './Review.scss'\n\nexport default class Review extends Component{\n    constructor(props){\n        super(props)\n\n        this.state={\n            reviewData:[],\n            id:-1\n        }\n\n    }\n    // Calling Reviewrender once props value is obtained\n    componentDidUpdate=(prevProps)=>{\n        console.log(this.reviewData)\n        if(this.props.data!=prevProps.data)\n        {\n            this.reviewRender();\n        }\n        \n    }\n\n    componentDidMount=()=>{\n         \n        if(this.props.data.length>1)\n        {\n            this.reviewRender();\n        }\n    }\n    // Saving the review details in state variable\n    reviewRender=()=>{\n        this.setState({reviewData:this.props.data})\n         \n    }\n    // If comment is changed save that comment\n    handletextChange=(e)=>{\n    this.setState({id:e.target.id})\n    var temp=this.state.reviewData\n    temp[this.state.id].text=e.target.value;\n    this.setState({reviewData:temp})\n    }\n    // Once comment is submitted changing the id to default\n    handleSubmit=(e)=>{\n    e.preventDefault();\n    this.setState({id:-1})\n    }\n    // deleting element in array by index value\n    delete=(e)=>{\n    var del=this.state.reviewData\n    delete del[e.target.id]\n    this.setState({reviewData:del})\n    }\n    // once update button is clicked target id is saved to enable editing text area\n    edit=(e)=>{\n        e.preventDefault();\n        this.setState({id:e.target.id})\n    \n    }\n    render(){\n\n        return(\n        <div className=\"container\">\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <div>{this.props.reviewButton}</div>\n        <h1>Reviews </h1>\n        {/* mapping to render review details */}\n        <div className=\"flexparent\">\n        {\n        this.state.reviewData!=null &&\n        this.state.reviewData.map((dt,i)=>(\n        <div>\n                <div className=\"flexchild\">\n                <div className='thumbnaildiv'>\n                <img id=\"displaypic\" src={dt.user.image_url}/>\n                <p>{dt.user.name}</p>\n                <div className=\"btn\">\n                <button type=\"submit\" id={i} onClick={this.edit}>Update</button>\n                <button type=\"submit\" id={i} onClick={this.delete}>Delete</button>\n                </div>\n                </div>\n                \n                <div className=\"forflex\">\n                <span>Reviewed on {dt.time_created}</span>\n                <span>{dt.rating} Stars</span>\n                <textarea id={i} value={dt.text} autoFocus onChange={this.handletextChange} disabled={this.state.id==i ?false:true} / >\n                </div>\n                <button type=\"submit\" id={i} onClick={this.handleSubmit} hidden={this.state.id==i ?false:true}>Submit</button>\n                <br />\n                </div>\n                <br />\n                </div>\n                 ))\n        }\n                        \n        <br />\n        <br />\n        </div>\n\n        </div>\n\n         );\n    }\n}","import React, { Component } from 'react';\n\nexport default class Call extends Component {\n    constructor(props) {\n        super(props);\n        {/* this outputs a cell to hold reviews but it is no longer used in the current version of the app*/}\n  }\n\n      \n  render() {\n    return (\n      <div style={{backgroundColor:\"yellow\"}}>\n          <div>\n              <button>Edit</button>\n              <button>Delete</button>\n          </div>\n        <div>\n            <img />\n            <span>{this.props.user}</span>\n            <span>{this.props.rating}</span>\n        </div>\n        <p>Comment:{this.props.comment}</p>\n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport LeaveReview from './LeaveReview';\nimport ReviewCell from './ReviewCell';\nimport Review from './Review/Review'\n\n\nexport default class Call extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: [{}],\n          name:'',\n          rating:0,\n          comment:'',\n          reviews:['']\n\n        }\n        {/*this binds the functions*/}\n        this.takeName = this.takeName.bind(this);\n        this.takeRating = this.takeRating.bind(this);\n        this.takeComment = this.takeComment.bind(this);\n        this.createComment = this.createComment.bind(this);\n  }\n\n  takeName(event){\n    {/* update the ymbol in state */}\n    this.setState({name: event.target.value});\n  }\n\n  takeRating(event){\n    {/* update the ymbol in state */}\n    this.setState({rating: event.target.value});\n  }\n\n  takeComment(event){\n    {/* update the quantity in state */}\n    this.setState({comment: event.target.value});\n  }\n\n  createComment(){\n    //   let newReviews = this.state.reviews;\n    //   let newReviewHTML = <ReviewCell user={this.state.name} rating={this.state.rating} comment={this.state.comment}/>;\n    //   newReviews.push(newReviewHTML);\n    //  this.setState({reviews:newReviews});\n    {/*this puts the data from the data fields into data*/}\n    let currentReviews = this.state.data;\n    let newReview =  {\n        \"id\": \"\",\n        \"url\": \"\",\n        \"text\": this.state.comment,\n        \"rating\": parseInt(this.state.rating),\n        \"time_created\": new Date().toISOString().replace(\"T\", \" \").replace(\"Z\", \"\"),\n        \"user\": {\n          \"id\": \"\",\n          \"profile_url\": \"\",\n          \"image_url\": \"\",\n          \"name\": this.state.name\n        }\n      };\n      currentReviews.unshift(newReview);\n      this.setState({data:currentReviews});\n\n  }\n\n    componentDidMount() {\n   \n        {/* call the api on page load */}\n        this.callApi();\n    }\n    async callApi() {\n \n        {/*https://medium.com/@chaoyue_zhao/how-to-make-axios-api-calls-with-yelp-fusion-inside-react-js-10755d8485c5*/}\n        {/*this calls the api and puts the response data into state*/}\n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/${this.props.restuarant}/reviews`, {\n        headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n        }\n        })\n        .then((res) => {\n  \n          this.setState({data:res.data.reviews})\n        \n        })\n        .catch((err) => {\n        console.log ('error');\n        })\n        \n      }\n  \n  render() {\n    \n    return (\n      <div>\n\n        \n        <div>{this.state.reviews}</div>      \n      <Review data={this.state.data} reviewButton={<LeaveReview takeName={this.takeName} takeRating={this.takeRating} takeComment={this.takeComment} createComment={this.createComment} />}/>\n\n      </div>\n      \n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport '../styles/Search.css'\nimport Call from './Call'\nimport ReviewCall from './ReviewCall'\n\nclass Search extends Component {\n        constructor (){\n        super ();\n        this.state ={\n        search: '',\n        renderReview:false\n        };\n        }\nupdateSearch(event){\n    this.setState({search: event.target.value.substr(0,20)})\n}\nClick=(e)=>{\n  e.preventDefault();\n  this.setState({renderReview:true});\n}\n\n   render (){\n\n      \n     return(\n      \n     \n        <div className=\"holder\"> \n        {/* <hr/> */}\n        {this.state.renderReview==false &&\n          <form onSubmit={this.submitHandler}>\n              <div className=\"search-tag\" htmlFor=\"search-input\">\n                  <input \n                  type= \"text\" \n                  name= \"name\" \n                  id =\"search-input\"\n                  value= {this.state.search}\n                  placeholder = \"search\"\n                  onChange= {this.updateSearch.bind(this)}\n                  />\n\n\n               \n                  \n                  {/* <hr/> */}\n                  <button className=\"button\" type=\"submit\" onClick={this.Click}> Submit</button>\n\n{/* Button is used to submit the request */}\n    <h1 className=\"caption\"> Search for a restaurant that delivers in San Francisco</h1>\n              </div>\n          </form>}\n          <div>\n\n          {this.state.renderReview ==true &&\t<Call term=\"delis\"/>}\t          \n          {this.state.renderReview ==true &&\t<ReviewCall restuarant=\"prospect-san-francisco\" />}\n          \n          </div>\n        </div>\n     )\n   }\n}\n\nexport default Search","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Call from './components/Call';\nimport Search from './components/Search'\nimport ReviewCall from './components/ReviewCall';\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Search />\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}