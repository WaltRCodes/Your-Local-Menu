{"ast":null,"code":"var _jsxFileName = \"/Users/thandi/Desktop/Per Scholas/Your-Local-Menu/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ''; //Here my component is being imported from the package react, this is important because it converts the class into a component. This is going to help with props.\n\nexport class Search extends Component {\n  //Im using props because they allow me to pass data from one component to another component, but since props are read-only I need to use state because it is what makes my React components interactive. This helps so that I can have conditional rendering in my react app.  Also, when my state changes, then the corresponding react component gets rendered again. \n  constructor(props) {\n    super(props);\n\n    this.changeHandle = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitHandle = event => {\n      event.preventdefault();\n      console.log(this.state);\n      axios.post('', this.state).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      query: '',\n      loading: false\n    };\n  } //I used setState here because this is where the react app is being told that components and children of components need to be rerendered.  \n\n\n  //I'm using render here because I want to render different types of HTML elements into the DOM once the logic has been implemented \n  //Once the state changes it is being passed down as props to the child component and making the app render itself agin\n  render() {\n    const {\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-tag\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"search-input\",\n      value: name,\n      placeholder: \"search\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"icon\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"instruct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, \" Learn More About \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 62\n      }\n    }), \" Products You're Interested In\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/thandi/Desktop/Per Scholas/Your-Local-Menu/src/components/Search.js"],"names":["React","Component","axios","Search","constructor","props","changeHandle","event","setState","target","name","value","submitHandle","preventdefault","console","log","state","post","then","response","catch","error","query","loading","render","submitHandler","changeHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,EAAP,C,CAEA;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAGtC;AAEGG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASrBC,YATqB,GASNC,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAC,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAoBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,OAAd;AACH,KAXoB;;AAAA,SAcrBC,YAdqB,GAcNL,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACM,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAd,MAAAA,KAAK,CAACe,IAAN,CAAW,EAAX,EAAe,KAAKD,KAApB,EACCE,IADD,CACMC,QAAQ,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,OAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,OAND;AAQH,KAzBmB;;AAEd,SAAKL,KAAL,GAAa;AACTM,MAAAA,KAAK,EAAC,EADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH,GAXkC,CAatC;;;AAmBA;AACA;AACGC,EAAAA,MAAM,GAAG;AACN,UAAM;AAACd,MAAAA;AAAD,QAAQ,KAAKM,KAAnB;AAED,wBAGG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAM,MAAA,QAAQ,EAAE,KAAKS,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,IAAI,EAAE,MADN;AAEA,MAAA,IAAI,EAAE,MAFN;AAGA,MAAA,EAAE,EAAE,cAHJ;AAIA,MAAA,KAAK,EAAGf,IAJR;AAKA,MAAA,WAAW,EAAG,QALd;AAMA,MAAA,QAAQ,EAAG,KAAKgB,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAgBI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,eAqBI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C,mCArBJ,CADJ,CAFF,CAHH;AAgCD;;AArEkC","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport ''\n\n//Here my component is being imported from the package react, this is important because it converts the class into a component. This is going to help with props.\n\nexport class Search extends Component {\n\n\n//Im using props because they allow me to pass data from one component to another component, but since props are read-only I need to use state because it is what makes my React components interactive. This helps so that I can have conditional rendering in my react app.  Also, when my state changes, then the corresponding react component gets rendered again. \n\n   constructor(props){\n       super(props)\n       this.state = {\n           query:'',\n           loading: false\n       };\n   }\n\n//I used setState here because this is where the react app is being told that components and children of components need to be rerendered.  \nchangeHandle = event => {\n    this.setState({[event.target.name]:event.target.value})\n}\n//cite:https://reactjs.org/docs/forms.html \n\nsubmitHandle = event => {\n     event.preventdefault ()\n     console.log(this.state)\n     axios.post('', this.state)\n     .then(response => {\n         console.log(response)\n     })\n     .catch(error => {\n         console.log(error)\n     })\n  \n }\n\n//I'm using render here because I want to render different types of HTML elements into the DOM once the logic has been implemented \n//Once the state changes it is being passed down as props to the child component and making the app render itself agin\n   render (){\n      const {name} =this.state\n      \n     return(\n      \n        \n        <div className=\"holder\"> \n              \n          <form onSubmit={this.submitHandler}>\n              <div className=\"search-tag\" htmlFor=\"search-input\">\n                  <input \n                  type= \"text\" \n                  name= \"name\" \n                  id =\"search-input\"\n                  value= {name}\n                  placeholder = \"search\"\n                  onChange= {this.changeHandler}\n                  />\n{/* Onchange lets me know that whenever a form field is changed, then this event needs to fire. React relies on the onchange events to handle what the user inputs in real time. I use value here to set the value of the component \n  \ncite: https://reactjs.org/docs/dom-elements.html\n    \n    */\n}\n               \n                  <button className=\"icon\" type=\"submit\"> </button>\n\n                  {/* Button is used to submit the request */}\n                  <hr/>\n\n                  <h1 className=\"instruct\"> Learn More About <br /> Products You're Interested In</h1>\n              </div>\n          </form>\n        </div>\n     )\n   }\n}\n\n"]},"metadata":{},"sourceType":"module"}